server:
  port: 8081
# Spring 框架核心配置节点，所有 Spring 相关的配置（如数据源、MVC、模板引擎等）均在此节点下
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/aiproject
    username: root
    password: 12345
  data:
    mongodb:
      uri: mongodb://localhost:27017/chat_memory_db

jwt:
  # 设置jwt签名加密时使用的秘钥
  user-secret-key: ChinaChengDuUniversityOfTechnology
  # 设置jwt过期时间(秒)
  user-ttl: 7200
  # 设置前端传递过来的令牌名称
  user-token-name: token

mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #mybatisplus日志输出配置，把sql语句在控制台进行输出
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: cn.cdut.model





























#server:
#  port: 8080
#
## Spring 框架核心配置节点，所有 Spring 相关的配置（如数据源、MVC、模板引擎等）均在此节点下
#spring:
#  # 数据源配置节点：用于配置数据库连接的核心信息，Spring Boot 会自动根据此配置初始化数据库连接池
#  datasource:
#    # 数据库驱动类全路径：指定连接 MySQL 数据库使用的 JDBC 驱动
#    # 注意：MySQL 8.0+ 必须使用 com.mysql.cj.jdbc.Driver（区别于 MySQL 5.x 的 com.mysql.jdbc.Driver）
#    # 若使用低版本驱动，会导致连接失败或兼容性问题
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    # 数据库连接 URL：包含数据库地址、端口、目标库名及连接参数
#    # 127.0.0.1:3306：数据库服务器地址（本地）和默认端口（MySQL 默认 3306，若修改过端口需同步变更）
#    # goods：要连接的目标数据库名称（需提前在 MySQL 中创建该库，否则启动会报“数据库不存在”错误）
#    # useUnicode=true：启用 Unicode 字符编码，避免中文乱码
#    # characterEncoding=utf8：指定字符编码格式为 UTF-8，与 useUnicode 配合解决中文存储问题
#    # zeroDateTimeBehavior=convertToNull：处理 MySQL 中的“零日期”（如 '0000-00-00 00:00:00'），将其转换为 NULL
#    # （若不配置此参数，查询到零日期时会抛出 SQL 异常）
#    url: jdbc:mysql://127.0.0.1:3306/goods?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull
#    # 数据库登录用户名：连接 MySQL 时使用的账号（此处为 root，生产环境建议使用权限受限的专用账号）
#    username: root
#    # 数据库登录密码：对应账号的密码（此处为 root，生产环境需使用复杂密码，并通过配置中心或环境变量注入，避免硬编码）
#    password: root
#
## MyBatis-Plus 配置节点：MyBatis-Plus（MP）是 MyBatis 的增强工具，所有 MP 相关配置在此节点下
#mybatis-plus:
#  # MP 的核心配置节点：用于配置 MyBatis 底层的运行参数（如日志、缓存、映射规则等）
#  configuration:
#    # 日志实现类：指定 MyBatis 输出 SQL 日志的方式，此处配置为“输出到控制台”
#    # org.apache.ibatis.logging.stdout.StdOutImpl：MyBatis 内置的控制台日志实现类
#    # 作用：开发阶段可在控制台查看执行的 SQL 语句、参数及执行结果，方便调试 SQL 问题
#    # 注意：生产环境建议关闭或改为文件日志（避免控制台输出影响性能）
#    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #mybatisplus日志输出配置，把sql语句在控制台进行输出
#  # 类型别名扫描包：指定 MyBatis 实体类（POJO）的包路径，配置后在 Mapper XML 中可直接使用类名（无需写全限定类名）
#  # 示例：原本需写 cn.company.pojo.User，配置后可直接写 User
#  # 注意：包路径需准确，否则会导致别名无法识别，报“找不到类”错误
#  #  type-aliases-package: cn.company.pojo
#  # Mapper XML 文件扫描路径：指定 MyBatis 映射文件（XML）的存放位置
#  # classpath:mapper/*.xml：表示扫描类路径（resources 目录）下的 mapper 文件夹中所有 .xml 后缀的文件
#  # 作用：MP 会加载这些 XML 文件中的 SQL 语句，与 Mapper 接口中的方法绑定
#  # 注意：若 XML 文件路径或文件名错误，会导致 SQL 无法加载，报“方法未找到”错误
#  mapper-locations: classpath:mapper/*.xml
#
